@startuml 04-component-payment-db

' C4
!define C4Puml https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master
'Icons
!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons
'AWS
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v19.0/dist

!includeurl C4Puml/C4_Component.puml

!include AWSPuml/AWSCommon.puml
!include AWSPuml/Groups/AWSCloud.puml
!include AWSPuml/Groups/PublicSubnet.puml
!include AWSPuml/Groups/PrivateSubnet.puml
!include AWSPuml/Groups/Region.puml
!include AWSPuml/Groups/VPC.puml
!include AWSPuml/Groups/AWSAccount.puml
!include AWSPuml/SecurityIdentityCompliance/WAF.puml
!include AWSPuml/NetworkingContentDelivery/APIGateway.puml
!include AWSPuml/NetworkingContentDelivery/ElasticLoadBalancing.puml
!include AWSPuml/Analytics/ManagedStreamingforApacheKafka.puml
!include AWSPuml/ApplicationIntegration/SimpleQueueService.puml
!include AWSPuml/Compute/Lambda.puml
!include AWSPuml/NetworkingContentDelivery/Route53.puml
!include AWSPuml/NetworkingContentDelivery/VPCEndpoints.puml
!include AWSPuml/NetworkingContentDelivery/PrivateLink.puml
!include AWSPuml/NetworkingContentDelivery/VPCPeeringConnection.puml
!include AWSPuml/NetworkingContentDelivery/CloudFront.puml
!include AWSPuml/SecurityIdentityCompliance/Shield.puml
!include AWSPuml/Storage/SimpleStorageServiceS3Standard.puml
!include AWSPuml/AWSCommon.puml
!include AWSPuml/Containers/Fargate.puml
!include AWSPuml/Containers/ElasticContainerRegistry.puml
!include AWSPuml/Containers/ElasticContainerService.puml
!include AWSPuml/NetworkingContentDelivery/VPCNATGateway.puml
!include AWSPuml/Containers/ElasticContainerServiceContainer1.puml
!include AWSPuml/Database/Aurora.puml
!include AWSPuml/Database/DynamoDB.puml
!include AWSPuml/Database/ElastiCacheElastiCacheforRedis.puml
!include AWSPuml/Analytics/DataFirehose.puml
!include AWSPuml/Analytics/KinesisDataStreams.puml
!include AWSPuml/Analytics/Athena.puml

' Icon Definition
!include ICONURL/font-awesome/bank.puml
!include ICONURL/material/payment.puml

LAYOUT_TOP_DOWN()
title Component Diagram - Payment Ledger & Data Manager


' Gateway boundary
AWSCloudGroup(aws, "AWS Cloud") {
    System_Boundary(hvp3, "High-Volume Payment Processing Platform") {
        System_Boundary(reportinghub, "Reporting Hub") {
            Container(analytics, "Analytics Engine", "Multiple", "Processes and analyzes payment data")
        }
        System_Boundary(payhub, "Payment Hub") {
            Container(paymentOrchestrator, "Payment Orchestrator", "Multiple", "Coordinates payment flows: validate, authorize, settle")
            Container(riskService, "Risk Assessment Engine", "Multiple", "Evaluates fraud/risk score on payment requests")
            ' Payment Orchestrator
            Container_Boundary(dataledger, "Payment Ledger & Data Manager") {
                AWSAccountGroup(networking,"Networking Account") {
                    RegionGroup(regionA, "Region (Replicated in2/3 Regions)") {
                        Route53(route53Int, "Route 53 Internal", "AWS Route 53", "DNS service")
                    }
                }
                AWSAccountGroup(payment2,"Payment Account") {
                    RegionGroup(regionPay, "Region (Replicated in2/3 Regions)") {
                        VPCGroup(vpcA, "VPC") {
                            PrivateSubnetGroup(privateSubnetA, "Private Subnet") {
                                Aurora(auroraA, "Operational Payment DB", "Amazon Aurora", "Stores secured transactional data (hot/cool)")
                                DynamoDB(dynamoA, "Non-Transactional Store", "Amazon DynamoDB", "Stores customer/merchant/3rd party profiles and metadata")
                                ElastiCacheElastiCacheforRedis(cacheA, "Hot Cache", "ElastiCache Redis", "Caches frequently accessed payment/session data")
                                SimpleStorageServiceS3Standard(s3ArchiveA, "S3 Archive", "Amazon S3 Glacier", "Long-term storage for cold/archived datasets")
                                Lambda(lambdaAnonymizer, "Anonymization Lambda", "AWS Lambda", "Executes data anonymization and reidentification functions")
                                Lambda(datattlSelector, "Data TTL Selector", "AWS Lambda", "Executes data TTL selection and deletion functions")
                                DataFirehose(dataFirehose, "Data Firehose", "AWS Data Firehose", "Handles data streaming and transformation")
                                KinesisDataStreams(kinesis, "Kinesis Stream", "AWS Kinesis Data Stream", "Handles data streaming for transformation")
                                Athena(athena, "Query Engine", "Amazon Athena", "Executes CTAS/SQL transformations")
                                SimpleStorageServiceS3Standard(s3HotAnon, "S3 Hot Storage", "Amazon S3", "Stores recent non-PII datasets")

                            }
                        }
                    }
                }
            }
        }
        AWSAccountGroup(identity,"Identity and Security Account") {
            Container(idP, "Identity Provider", "Security Hub", "Handles authentication and token verification")
            Container(secServices, "Security Services", "Multiple", "Handles encryption, key management, and security policies")

        }

    }
}

AddRelTag("VPeer", $textColor="purple", $lineColor="purple", $legendText="VPC Internal Traffic Connection", $sprite="VPCPeeringConnection")
AddRelTag("Plink", $textColor="purple", $lineColor="purple", $legendText="Private Link Connection", $sprite="PrivateLink")


' Relationships
Rel(auroraA, cacheA, "Caches hot payment data")

Rel(auroraA, auroraA, "Replicates secured data", "Aurora Global DB")
Rel(dynamoA, dynamoA, "Multiregion replication", "DynamoDB Global Tables")

Rel(lambdaAnonymizer, s3HotAnon, "Reads/writes anonymized data")
Rel(lambdaAnonymizer, athena, "Triggers CTAS anonymization/reidentification queries")

Rel(athena, s3HotAnon, "Reads from recent anonymized sets")

Rel(route53Int, auroraA, "Internal DNS resolution")
Rel(route53Int, dynamoA, "Internal DNS resolution")

Rel(dynamoA,kinesis, "Streams TTL data", "Streams TTL data for durther archiving")
Rel(kinesis, dataFirehose, "Streams TTL data", "Streams TTL data for further archiving")
Rel(datattlSelector, dataFirehose, "Triggers data TTL selection and deletion", "Triggers data TTL selection and deletion")
Rel(dataFirehose, s3ArchiveA, "Archives data", "Archives data for long-term storage")

Rel(paymentOrchestrator, route53Int, "Reads/writes payment data", "Internal API")
Rel(riskService, route53Int, "Reads/writes risk data", "Internal API")
Rel(analytics, s3HotAnon, "Reads anonymized data", "Reads anonymized data for reporting")

Rel(dataledger, idP, "Validates tokens", "Validates tokens")
Rel(dataledger, secServices, "Encrypts/decrypts data and Other Security  Services", "Encrypts/decrypts data and Other Security  Services")

SHOW_LEGEND()


@enduml
